apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: storageosoperator.v1.1.0
  namespace: placeholder
  annotations:
    capabilities: Full Lifecycle
    categories: "Storage"
    description: Cloud-native, persistent storage for containers.
    containerImage: storageos/cluster-operator:v1.1.0
    repository: https://github.com/storageos/cluster-operator
    createdAt: 2019-04-09T08:00:00Z
    support: StorageOS, Inc
    certified: "false"
    alm-examples: |-
      [
        {
          "apiVersion": "storageos.com/v1",
          "kind": "StorageOSCluster",
          "metadata": {
            "name": "example-storageos",
            "namespace": "default"
          },
          "spec": {
            "secretRefName": "storageos-api",
            "secretRefNamespace": "default"
          }
        },
        {
          "apiVersion": "storageos.com/v1",
          "kind": "Job",
          "metadata": {
            "name": "example-job",
            "namespace": "default"
          },
          "spec": {
            "image": "storageos/cluster-operator:latest",
            "args": ["/var/lib/storageos"],
            "mountPath": "/var/lib",
            "hostPath": "/var/lib",
            "completionWord": "done"
          }
        },
        {
          "apiVersion": "storageos.com/v1",
          "kind": "StorageOSUpgrade",
          "metadata": {
            "name": "example-upgrade",
            "namespace": "default"
          },
          "spec": {
            "newImage": "storageos/node:latest"
          }
        }
      ]

spec:
  displayName: StorageOS
  description: |
    StorageOS is a cloud native, software-defined storage platform that
    transforms commodity server or cloud based disk capacity into
    enterprise-class persistent storage for containers. StorageOS is ideal for
    deploying databases, message queues, and other mission-critical stateful
    solutions, where rapid recovery and fault tolerance are essential.

    The StorageOS Operator installs and manages StorageOS within a cluster.
    Cluster nodes may contribute local or attached disk-based storage into a
    distributed pool, which is then available to all cluster members via a
    global namespace.

    Volumes are available across the cluster so if a container gets moved to
    another node it has immediate access to re-attach its data. Data can be
    protected with synchronous replication. Compression, caching, and QoS are
    enabled by default, and all volumes are thinly-provisioned.

    No other hardware or software is required.

    StorageOS is free to use up to 100GB of presented Storage, increasing to
    500GB after registration.  For additional capacity and support plans contact
    sales@storageos.com.

    ## Supported Features

    * **Rapid volume failover** - If a container gets re-scheduled to another
    node, any StorageOS volumes can be re-attached immediately, irrespective of
    where the data is located within the cluster.

    * **Data protection** - Data is replicated synchronously, up to 6 copies.

    * **Block checksums** - Each block is protected by a checksum which
    automatically detects any corruption of data in the underlying storage
    media.

    * **Thin provisioning** - Only consume the space you need in a storage pool.

    * **Data reduction** - Transparent inline data compression to reduce the
    amount of storage used in a backing store as well as reducing the network
    bandwidth requirements for replication.

    * **In-memory caching** - Speed up access to data even when accessed
    remotely.

    * **Quality of service** - Prioritize data traffic and address the “noisy
    neighbors” problem.

    * **Flexible configuration** - Use labels to automate data placement and
    enforce data policy such as replication. Ideal for compliance and infosec
    teams to enforce policies and rules while still enabling self-service
    storage by developers and DevOps teams.

    * **Access control** - Support multiple namespace – individual users are
    permissioned to specific storage namespaces.

    * **Observability & instrumentation** - Log streams for observability and
    Prometheus support for instrumentation.

    * **Deployment flexibility** - Scale up or scale out storage based on
    application requirements.  Works with any infrastructure – on-premises, VM,
    bare metal or cloud.

    * **Small footprint** - Lightweight container requires minimum 1 core with
    2GB of RAM.  Runs in user-space on any 64-bit Linux with no custom kernel
    modules.

    ## Required Parameters

    * `secretRefName` - the name of a secret that contains two keys for the 
      `apiUsername` and `apiPassword` to be used as api credentials
      ([documentation](https://docs.storageos.com/docs/reference/cluster-operator/examples))
    * `secretRefNamespace` - the namespace where the api credentials secret is
      stored

    ## About StorageOS

    StorageOS gives users total control of their own storage environment –
    whether in the cloud or on-premises. Our customers take advantage of storage
    on any platform while maintaining full control of business requirements
    around availability, data mobility, performance, security, data residency
    compliance and business continuity.

  keywords: ['storageos', 'storage', 'persistent storage', 'open source']

  version: 1.1.0
  minKubeVersion: "1.10.0"
  maturity: stable
  maintainers:
  - name: StorageOS, Inc
    email: support@storageos.com

  provider:
    name: StorageOS, Inc

  labels:
    operated-by: storageosoperator

  selector:
    matchLabels:
      operated-by: storageosoperator

  links:
  - name: Documentation
    url: https://docs.storageos.com/
  - name: StorageOS Operator Source Code
    url: https://github.com/storageos/cluster-operator

  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOS4wLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iQ29sb3VyIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCINCgkgdmlld0JveD0iMCAwIDc2NS40IDc2NS40IiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCA3NjUuNCA3NjUuNCIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+DQo8cGF0aCBmaWxsPSIjMzYzMzQ2IiBkPSJNNjYzLjcsMjQxLjlINTI5LjVsLTEwLjItMTcuNmwyNC43LTQyLjdsLTMyLjgtNTYuN2gtMjUuOWw0OS44LTg2LjNjNS4zLTkuMywyLjItMjEuMS03LjEtMjYuNQ0KCWMtOS4zLTUuNC0yMS4xLTIuMi0yNi41LDcuMWwtNjEuNSwxMDYuNUgzMjguM0wyNjYuOCwxOS4yYy01LjMtOS4zLTE3LjItMTIuNS0yNi41LTcuMWMtOS4zLDUuNC0xMi41LDE3LjItNy4xLDI2LjVsNDkuOCw4Ni4zDQoJaC0yNS45bC0zMi44LDU2LjdsMjQuNiw0Mi42bC0xMC4yLDE3LjdIMTA0LjZMMjYuMywzNzcuNWw3OC4zLDEzNS42aDEzNC4ybDYxLjUsMTA2LjZsMi4zLTEuM2wtMi4yLDEuNGw4NCwxMzkuOEw0NjgsNjE5LjZsMCwwDQoJbDYxLjUtMTA2LjZoMTM0LjJsNzguMy0xMzUuNkw2NjMuNywyNDEuOXogTTI2MC4yLDIwNC44bC0xMy40LTIzLjNsMjEuNi0zNy40aDI1LjlsMC41LDAuOEwyNjAuMiwyMDQuOHogTTQ3My43LDE0NS4xbDAuNS0wLjlINTAwDQoJbDIxLjYsMzcuNGwtMTMuNCwyMy4zTDQ3My43LDE0NS4xeiIvPg0KPHBvbHlnb24gZmlsbD0iI0ZGRkZGRiIgcG9pbnRzPSIyMzguOCwyODAuNiAyMzcuMiwyODAuNiAxMjcsMjgwLjYgNzEuMSwzNzcuNSAxMjcsNDc0LjMgMjM3LjYsNDc0LjMgMjM4LjgsNDc0LjMgMjk0LjcsMzc3LjUgIi8+DQo8cG9seWdvbiBmaWxsPSIjRkZGRkZGIiBwb2ludHM9IjY0MS40LDI4MC42IDUyOS42LDI4MC42IDUyOS40LDI4MC45IDQ3My43LDM3Ny41IDUyOS42LDQ3NC4zIDUyOS43LDQ3NC4zIDY0MS40LDQ3NC4zIDY5Ny4zLDM3Ny41IA0KCSIvPg0KPHBvbHlnb24gZmlsbD0iIzVDQjMyMyIgcG9pbnRzPSI0NDAuMSwxNjQuNSAzMjguMywxNjQuNSAzMjguMiwxNjQuNyAyNzIuNCwyNjEuMyAzMjguMywzNTguMSAzMjguNCwzNTguMSA0NDAuMSwzNTguMSA0OTYsMjYxLjMgDQoJIi8+DQo8cG9seWdvbiBmaWxsPSIjNUNCMzIzIiBwb2ludHM9IjQzNSw1OTkuNCA0MzQuOSw1OTkuNCAzODQuMiw2ODQuMSAzMzMuOSw2MDAuMyAzMzMuOSw2MDAuMyAyNzIuNCw0OTMuNyAzMTkuNiw0MTEuOSAzMjguMywzOTYuOSANCgk0NDAuMSwzOTYuOSA0OTYsNDkzLjcgIi8+DQo8cGF0aCBmaWxsPSJub25lIiBkPSJNNjk5LjktMzQuN2MtOS4zLDUxLjMsNi45LDEwNS44LDcuMSwxNTcuM2MwLDQuNi03LjMsNy4zLTkuMywyLjVjLTYuMi0xNC4yLTE2LjQtMjUuNC0yOC43LTM0LjcNCgljLTEwLjUtOC0yMi0xNC43LTMyLjgtMjIuM2MtNy43LTUuNC0xNC4zLTEyLjEtMjEtMTguNmMtOC03LjgtMTYtMTUuOC0yNS4zLTIyLjFjLTUuMS0zLjUtMTEuMi03LjMtMTcuNi03LjQNCgljNS45LDEzLjYsMTUuNSwyNS40LDI1LjYsMzZjMTcuMSwxOC4xLDM2LjEsMzQuNyw1NC40LDUxLjZjOS4xLDguNCwxOC40LDE2LjYsMjguNywyMy40YzguNCw1LjUsMTgsMTAuOSwyOC40LDEwLjUNCgljNi40LTAuMiw2LjQsOS44LDAsMTBjLTEyLjksMC40LTI1LjItNi4yLTM1LjYtMTMuM2MtMjAuMy0xMy45LTM3LjMtMzIuMi01NS41LTQ4LjZjLTIyLjUtMjAuMy00Ny42LTQyLjgtNTcuNy03Mi4yDQoJYy0wLjktMi43LDEuMS01LjMsMy41LTYuMmMxMC43LTQsMjIuMSwxLjUsMzAuOCw3LjZjMTguNSwxMi44LDMyLjEsMzEuNCw1MC44LDQzLjhjMTgsMTIsMzcuMiwyMy42LDUwLjUsNDAuNg0KCWMtMy00NS43LTE0LjItOTMtNi41LTEzOEgydjgyMS45aDc2Ni41Vi0zNC43SDY5OS45eiIvPg0KPC9zdmc+DQo=
    mediatype: image/svg

  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: true

  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - serviceAccountName: storageos-operator
        rules:
        - apiGroups:
          - storageos.com
          resources:
          - storageosclusters
          - storageosupgrades
          - jobs
          verbs:
          - "*"
        - apiGroups:
          - apps
          resources:
          - statefulsets
          - daemonsets
          verbs:
          - "*"
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
          - get
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - list
          - watch
          - get
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          - namespaces
          - serviceaccounts
          - secrets
          - services
          - persistentvolumeclaims
          - persistentvolumes
          verbs:
          - create
          - patch
          - get
          - list
          - delete
          - watch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          - clusterroles
          - clusterrolebindings
          verbs:
          - create
          - delete
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          - volumeattachments
          - csinodeinfos
          verbs:
          - create
          - delete
          - watch
          - list
          - get
          - update
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - delete
        - apiGroups:
          - csi.storage.k8s.io
          resources:
          - csidrivers
          verbs:
          - create
          - delete
      deployments:
      - name: storageos-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: storageos-operator
          template:
            metadata:
              name: storageos-operator
              labels:
                name: storageos-operator
            spec:
              serviceAccountName: storageos-operator
              containers:
              - name: storageos-operator
                command:
                - cluster-operator
                image: storageos/cluster-operator:v1.1.0
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: OPERATOR_NAME
                  value: "cluster-operator"
                ports:
                - containerPort: 8080
                  name: metrics
  customresourcedefinitions:
    owned:
    - name: storageosclusters.storageos.com
      version: v1
      kind: StorageOSCluster
      displayName: StorageOS Cluster
      description: StorageOS Cluster installs StorageOS in the cluster. It contains all the configuration for setting up a StorageOS cluster and also shows the status of the running StorageOS cluster.
      specDescriptors:
      - description: The name of the secret object that stores the api credentials.
        displayName: Cluster Secret
        path: secretRefName
      - description: The name of the namespace where the secret object that stores the api credentials exists.
        displayName: Cluster Secret Namespace
        path: secretRefNamespace
      statusDescriptors:
      - description: Set of nodes that are part of the StorageOS Cluster.
        displayName: Nodes
        path: nodes
      - description: The status of each of the members of StorageOS Cluster.
        displayName: Member Status
        path: members
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: The current status of the StorageOS Cluster.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Ready Nodes
        displayName: Ready
        path: ready
    - name: jobs.storageos.com
      version: v1
      kind: Job
      displayName: StorageOS Job
      description: StorageOS Job creates special pods that run on all the node and perform an administrative task. This could be used for cluster maintenance tasks.
    - name: storageosupgrades.storageos.com
      version: v1
      kind: StorageOSUpgrade
      displayName: StorageOS Upgrade
      description: StorageOS Upgrade automatically upgrades an existing StorageOS cluster as per the upgrade configuration.
